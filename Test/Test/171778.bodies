class CI_Driver
!!!641026.php!!!	decorate(in parent : object) : void
		$this->_parent = $parent;

		// Lock down attributes to what is defined in the class
		// and speed up references in magic methods

		$class_name = get_class($parent);

		if ( ! isset(self::$_reflections[$class_name]))
		{
			$r = new ReflectionObject($parent);

			foreach ($r->getMethods() as $method)
			{
				if ($method->isPublic())
				{
					$this->_methods[] = $method->getName();
				}
			}

			foreach ($r->getProperties() as $prop)
			{
				if ($prop->isPublic())
				{
					$this->_properties[] = $prop->getName();
				}
			}

			self::$_reflections[$class_name] = array($this->_methods, $this->_properties);
		}
		else
		{
			list($this->_methods, $this->_properties) = self::$_reflections[$class_name];
		}
!!!641154.php!!!	__call(in method : string, in args : array = array()) : mixed
		if (in_array($method, $this->_methods))
		{
			return call_user_func_array(array($this->_parent, $method), $args);
		}

		throw new BadMethodCallException('No such method: '.$method.'()');
!!!641282.php!!!	__get(in var : string) : mixed
		if (in_array($var, $this->_properties))
		{
			return $this->_parent->$var;
		}
!!!641410.php!!!	__set(in var : string, in val : array) : mixed
		if (in_array($var, $this->_properties))
		{
			$this->_parent->$var = $val;
		}
