class CI_DB_sqlite3_driver
!!!430210.php!!!	db_connect(in persistent : bool = FALSE) : SQLite3
		if ($persistent)
		{
			log_message('debug', 'SQLite3 doesn\'t support persistent connections');
		}

		try
		{
			return ( ! $this->password)
				? new SQLite3($this->database)
				: new SQLite3($this->database, SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE, $this->password);
		}
		catch (Exception $e)
		{
			return FALSE;
		}
!!!430338.php!!!	version() : string
		if (isset($this->data_cache['version']))
		{
			return $this->data_cache['version'];
		}

		$version = SQLite3::version();
		return $this->data_cache['version'] = $version['versionString'];
!!!430466.php!!!	_execute(in sql : string) : mixed
		return $this->is_write_type($sql)
			? $this->conn_id->exec($sql)
			: $this->conn_id->query($sql);
!!!430594.php!!!	_trans_begin() : bool
		return $this->conn_id->exec('BEGIN TRANSACTION');
!!!430722.php!!!	_trans_commit() : bool
		return $this->conn_id->exec('END TRANSACTION');
!!!430850.php!!!	_trans_rollback() : bool
		return $this->conn_id->exec('ROLLBACK');
!!!430978.php!!!	_escape_str(in str : string) : string
		return $this->conn_id->escapeString($str);
!!!431106.php!!!	affected_rows() : int
		return $this->conn_id->changes();
!!!431234.php!!!	insert_id() : int
		return $this->conn_id->lastInsertRowID();
!!!431362.php!!!	_list_tables(in prefix_limit : bool = FALSE) : string
		return 'SELECT "NAME" FROM "SQLITE_MASTER" WHERE "TYPE" = \'table\''
			.(($prefix_limit !== FALSE && $this->dbprefix != '')
				? ' AND "NAME" LIKE \''.$this->escape_like_str($this->dbprefix).'%\' '.sprintf($this->_like_escape_str, $this->_like_escape_chr)
				: '');
!!!431490.php!!!	list_fields(in table : string) : array
		if (($result = $this->query('PRAGMA TABLE_INFO('.$this->protect_identifiers($table, TRUE, NULL, FALSE).')')) === FALSE)
		{
			return FALSE;
		}

		$fields = array();
		foreach ($result->result_array() as $row)
		{
			$fields[] = $row['name'];
		}

		return $fields;
!!!431618.php!!!	field_data(in table : string) : array
		if (($query = $this->query('PRAGMA TABLE_INFO('.$this->protect_identifiers($table, TRUE, NULL, FALSE).')')) === FALSE)
		{
			return FALSE;
		}

		$query = $query->result_array();
		if (empty($query))
		{
			return FALSE;
		}

		$retval = array();
		for ($i = 0, $c = count($query); $i < $c; $i++)
		{
			$retval[$i]			= new stdClass();
			$retval[$i]->name		= $query[$i]['name'];
			$retval[$i]->type		= $query[$i]['type'];
			$retval[$i]->max_length		= NULL;
			$retval[$i]->default		= $query[$i]['dflt_value'];
			$retval[$i]->primary_key	= isset($query[$i]['pk']) ? (int) $query[$i]['pk'] : 0;
		}

		return $retval;
!!!431746.php!!!	error() : array
		return array('code' => $this->conn_id->lastErrorCode(), 'message' => $this->conn_id->lastErrorMsg());
!!!431874.php!!!	_replace(in table : string, in keys : array, in values : array) : string
		return 'INSERT OR '.parent::_replace($table, $keys, $values);
!!!432002.php!!!	_truncate(in table : string) : string
		return 'DELETE FROM '.$table;
!!!432130.php!!!	_close() : void
		$this->conn_id->close();
