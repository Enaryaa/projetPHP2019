format 221
"core" // application::Test::01Programmation::PROJETS::PROJETPHP::system::core
  revision 1
  modified_by 2 "lechartier"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  php_dir "01Programmation/PROJETS/PROJETPHP/system/core/"
  deploymentview 141570 "core"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 172802 "Benchmark"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 155138 // CI_Benchmark
      end
    end

    artifact 172930 "CodeIgniter"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * System Initialization File
 *
 * Loads the base classes and executes the request.
 *
 * @package		CodeIgniter
 * @subpackage	CodeIgniter
 * @category	Front-controller
 * @author		EllisLab Dev Team
 * @link		https://codeigniter.com/user_guide/
 */

/**
 * CodeIgniter Version
 *
 * @var	string
 *
 */
	const CI_VERSION = '3.1.10';

/*
 * ------------------------------------------------------
 *  Load the framework constants
 * ------------------------------------------------------
 */
	if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))
	{
		require_once(APPPATH.'config/'.ENVIRONMENT.'/constants.php');
	}

	if (file_exists(APPPATH.'config/constants.php'))
	{
		require_once(APPPATH.'config/constants.php');
	}

/*
 * ------------------------------------------------------
 *  Load the global functions
 * ------------------------------------------------------
 */
	require_once(BASEPATH.'core/Common.php');


/*
 * ------------------------------------------------------
 * Security procedures
 * ------------------------------------------------------
 */

if ( ! is_php('5.4'))
{
	ini_set('magic_quotes_runtime', 0);

	if ((bool) ini_get('register_globals'))
	{
		$_protected = array(
			'_SERVER',
			'_GET',
			'_POST',
			'_FILES',
			'_REQUEST',
			'_SESSION',
			'_ENV',
			'_COOKIE',
			'GLOBALS',
			'HTTP_RAW_POST_DATA',
			'system_path',
			'application_folder',
			'view_folder',
			'_protected',
			'_registered'
		);

		$_registered = ini_get('variables_order');
		foreach (array('E' => '_ENV', 'G' => '_GET', 'P' => '_POST', 'C' => '_COOKIE', 'S' => '_SERVER') as $key => $superglobal)
		{
			if (strpos($_registered, $key) === FALSE)
			{
				continue;
			}

			foreach (array_keys($$superglobal) as $var)
			{
				if (isset($GLOBALS[$var]) && ! in_array($var, $_protected, TRUE))
				{
					$GLOBALS[$var] = NULL;
				}
			}
		}
	}
}


/*
 * ------------------------------------------------------
 *  Define a custom error handler so we can log PHP errors
 * ------------------------------------------------------
 */
	set_error_handler('_error_handler');
	set_exception_handler('_exception_handler');
	register_shutdown_function('_shutdown_handler');

/*
 * ------------------------------------------------------
 *  Set the subclass_prefix
 * ------------------------------------------------------
 *
 * Normally the \"subclass_prefix\" is set in the config file.
 * The subclass prefix allows CI to know if a core class is
 * being extended via a library in the local application
 * \"libraries\" folder. Since CI allows config items to be
 * overridden via data set in the main index.php file,
 * before proceeding we need to know if a subclass_prefix
 * override exists. If so, we will set this value now,
 * before any classes are loaded
 * Note: Since the config file data is cached it doesn't
 * hurt to load it here.
 */
	if ( ! empty($assign_to_config['subclass_prefix']))
	{
		get_config(array('subclass_prefix' => $assign_to_config['subclass_prefix']));
	}

/*
 * ------------------------------------------------------
 *  Should we use a Composer autoloader?
 * ------------------------------------------------------
 */
	if ($composer_autoload = config_item('composer_autoload'))
	{
		if ($composer_autoload === TRUE)
		{
			file_exists(APPPATH.'vendor/autoload.php')
				? require_once(APPPATH.'vendor/autoload.php')
				: log_message('error', '$config[\\'composer_autoload\\'] is set to TRUE but '.APPPATH.'vendor/autoload.php was not found.');
		}
		elseif (file_exists($composer_autoload))
		{
			require_once($composer_autoload);
		}
		else
		{
			log_message('error', 'Could not find the specified $config[\\'composer_autoload\\'] path: '.$composer_autoload);
		}
	}

/*
 * ------------------------------------------------------
 *  Start the timer... tick tock tick tock...
 * ------------------------------------------------------
 */
	$BM =& load_class('Benchmark', 'core');
	$BM->mark('total_execution_time_start');
	$BM->mark('loading_time:_base_classes_start');

/*
 * ------------------------------------------------------
 *  Instantiate the hooks class
 * ------------------------------------------------------
 */
	$EXT =& load_class('Hooks', 'core');

/*
 * ------------------------------------------------------
 *  Is there a \"pre_system\" hook?
 * ------------------------------------------------------
 */
	$EXT->call_hook('pre_system');

/*
 * ------------------------------------------------------
 *  Instantiate the config class
 * ------------------------------------------------------
 *
 * Note: It is important that Config is loaded first as
 * most other classes depend on it either directly or by
 * depending on another class that uses it.
 *
 */
	$CFG =& load_class('Config', 'core');

	// Do we have any manually set config items in the index.php file?
	if (isset($assign_to_config) && is_array($assign_to_config))
	{
		foreach ($assign_to_config as $key => $value)
		{
			$CFG->set_item($key, $value);
		}
	}

/*
 * ------------------------------------------------------
 * Important charset-related stuff
 * ------------------------------------------------------
 *
 * Configure mbstring and/or iconv if they are enabled
 * and set MB_ENABLED and ICONV_ENABLED constants, so
 * that we don't repeatedly do extension_loaded() or
 * function_exists() calls.
 *
 * Note: UTF-8 class depends on this. It used to be done
 * in it's constructor, but it's _not_ class-specific.
 *
 */
	$charset = strtoupper(config_item('charset'));
	ini_set('default_charset', $charset);

	if (extension_loaded('mbstring'))
	{
		define('MB_ENABLED', TRUE);
		// mbstring.internal_encoding is deprecated starting with PHP 5.6
		// and it's usage triggers E_DEPRECATED messages.
		@ini_set('mbstring.internal_encoding', $charset);
		// This is required for mb_convert_encoding() to strip invalid characters.
		// That's utilized by CI_Utf8, but it's also done for consistency with iconv.
		mb_substitute_character('none');
	}
	else
	{
		define('MB_ENABLED', FALSE);
	}

	// There's an ICONV_IMPL constant, but the PHP manual says that using
	// iconv's predefined constants is \"strongly discouraged\".
	if (extension_loaded('iconv'))
	{
		define('ICONV_ENABLED', TRUE);
		// iconv.internal_encoding is deprecated starting with PHP 5.6
		// and it's usage triggers E_DEPRECATED messages.
		@ini_set('iconv.internal_encoding', $charset);
	}
	else
	{
		define('ICONV_ENABLED', FALSE);
	}

	if (is_php('5.6'))
	{
		ini_set('php.internal_encoding', $charset);
	}

/*
 * ------------------------------------------------------
 *  Load compatibility features
 * ------------------------------------------------------
 */

	require_once(BASEPATH.'core/compat/mbstring.php');
	require_once(BASEPATH.'core/compat/hash.php');
	require_once(BASEPATH.'core/compat/password.php');
	require_once(BASEPATH.'core/compat/standard.php');

/*
 * ------------------------------------------------------
 *  Instantiate the UTF-8 class
 * ------------------------------------------------------
 */
	$UNI =& load_class('Utf8', 'core');

/*
 * ------------------------------------------------------
 *  Instantiate the URI class
 * ------------------------------------------------------
 */
	$URI =& load_class('URI', 'core');

/*
 * ------------------------------------------------------
 *  Instantiate the routing class and set the routing
 * ------------------------------------------------------
 */
	$RTR =& load_class('Router', 'core', isset($routing) ? $routing : NULL);

/*
 * ------------------------------------------------------
 *  Instantiate the output class
 * ------------------------------------------------------
 */
	$OUT =& load_class('Output', 'core');

/*
 * ------------------------------------------------------
 *	Is there a valid cache file? If so, we're done...
 * ------------------------------------------------------
 */
	if ($EXT->call_hook('cache_override') === FALSE && $OUT->_display_cache($CFG, $URI) === TRUE)
	{
		exit;
	}

/*
 * -----------------------------------------------------
 * Load the security class for xss and csrf support
 * -----------------------------------------------------
 */
	$SEC =& load_class('Security', 'core');

/*
 * ------------------------------------------------------
 *  Load the Input class and sanitize globals
 * ------------------------------------------------------
 */
	$IN	=& load_class('Input', 'core');

/*
 * ------------------------------------------------------
 *  Load the Language class
 * ------------------------------------------------------
 */
	$LANG =& load_class('Lang', 'core');

/*
 * ------------------------------------------------------
 *  Load the app controller and local controller
 * ------------------------------------------------------
 *
 */
	// Load the base controller class
	require_once BASEPATH.'core/Controller.php';

	/**
	 * Reference to the CI_Controller method.
	 *
	 * Returns current CI instance object
	 *
	 * @return CI_Controller
	 */
	function &get_instance()
	{
		return CI_Controller::get_instance();
	}

	if (file_exists(APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php'))
	{
		require_once APPPATH.'core/'.$CFG->config['subclass_prefix'].'Controller.php';
	}

	// Set a mark point for benchmarking
	$BM->mark('loading_time:_base_classes_end');

/*
 * ------------------------------------------------------
 *  Sanity checks
 * ------------------------------------------------------
 *
 *  The Router class has already validated the request,
 *  leaving us with 3 options here:
 *
 *	1) an empty class name, if we reached the default
 *	   controller, but it didn't exist;
 *	2) a query string which doesn't go through a
 *	   file_exists() check
 *	3) a regular request for a non-existing page
 *
 *  We handle all of these as a 404 error.
 *
 *  Furthermore, none of the methods in the app controller
 *  or the loader class can be called via the URI, nor can
 *  controller methods that begin with an underscore.
 */

	$e404 = FALSE;
	$class = ucfirst($RTR->class);
	$method = $RTR->method;

	if (empty($class) OR ! file_exists(APPPATH.'controllers/'.$RTR->directory.$class.'.php'))
	{
		$e404 = TRUE;
	}
	else
	{
		require_once(APPPATH.'controllers/'.$RTR->directory.$class.'.php');

		if ( ! class_exists($class, FALSE) OR $method[0] === '_' OR method_exists('CI_Controller', $method))
		{
			$e404 = TRUE;
		}
		elseif (method_exists($class, '_remap'))
		{
			$params = array($method, array_slice($URI->rsegments, 2));
			$method = '_remap';
		}
		elseif ( ! method_exists($class, $method))
		{
			$e404 = TRUE;
		}
		/**
		 * DO NOT CHANGE THIS, NOTHING ELSE WORKS!
		 *
		 * - method_exists() returns true for non-public methods, which passes the previous elseif
		 * - is_callable() returns false for PHP 4-style constructors, even if there's a __construct()
		 * - method_exists($class, '__construct') won't work because CI_Controller::__construct() is inherited
		 * - People will only complain if this doesn't work, even though it is documented that it shouldn't.
		 *
		 * ReflectionMethod::isConstructor() is the ONLY reliable check,
		 * knowing which method will be executed as a constructor.
		 */
		elseif ( ! is_callable(array($class, $method)))
		{
			$reflection = new ReflectionMethod($class, $method);
			if ( ! $reflection->isPublic() OR $reflection->isConstructor())
			{
				$e404 = TRUE;
			}
		}
	}

	if ($e404)
	{
		if ( ! empty($RTR->routes['404_override']))
		{
			if (sscanf($RTR->routes['404_override'], '%[^/]/%s', $error_class, $error_method) !== 2)
			{
				$error_method = 'index';
			}

			$error_class = ucfirst($error_class);

			if ( ! class_exists($error_class, FALSE))
			{
				if (file_exists(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php'))
				{
					require_once(APPPATH.'controllers/'.$RTR->directory.$error_class.'.php');
					$e404 = ! class_exists($error_class, FALSE);
				}
				// Were we in a directory? If so, check for a global override
				elseif ( ! empty($RTR->directory) && file_exists(APPPATH.'controllers/'.$error_class.'.php'))
				{
					require_once(APPPATH.'controllers/'.$error_class.'.php');
					if (($e404 = ! class_exists($error_class, FALSE)) === FALSE)
					{
						$RTR->directory = '';
					}
				}
			}
			else
			{
				$e404 = FALSE;
			}
		}

		// Did we reset the $e404 flag? If so, set the rsegments, starting from index 1
		if ( ! $e404)
		{
			$class = $error_class;
			$method = $error_method;

			$URI->rsegments = array(
				1 => $class,
				2 => $method
			);
		}
		else
		{
			show_404($RTR->directory.$class.'/'.$method);
		}
	}

	if ($method !== '_remap')
	{
		$params = array_slice($URI->rsegments, 2);
	}

/*
 * ------------------------------------------------------
 *  Is there a \"pre_controller\" hook?
 * ------------------------------------------------------
 */
	$EXT->call_hook('pre_controller');

/*
 * ------------------------------------------------------
 *  Instantiate the requested controller
 * ------------------------------------------------------
 */
	// Mark a start point so we can benchmark the controller
	$BM->mark('controller_execution_time_( '.$class.' / '.$method.' )_start');

	$CI = new $class();

/*
 * ------------------------------------------------------
 *  Is there a \"post_controller_constructor\" hook?
 * ------------------------------------------------------
 */
	$EXT->call_hook('post_controller_constructor');

/*
 * ------------------------------------------------------
 *  Call the requested method
 * ------------------------------------------------------
 */
	call_user_func_array(array(&$CI, $method), $params);

	// Mark a benchmark end point
	$BM->mark('controller_execution_time_( '.$class.' / '.$method.' )_end');

/*
 * ------------------------------------------------------
 *  Is there a \"post_controller\" hook?
 * ------------------------------------------------------
 */
	$EXT->call_hook('post_controller');

/*
 * ------------------------------------------------------
 *  Send the final rendered output to the browser
 * ------------------------------------------------------
 */
	if ($EXT->call_hook('display_override') === FALSE)
	{
		$OUT->_display();
	}

/*
 * ------------------------------------------------------
 *  Is there a \"post_system\" hook?
 * ------------------------------------------------------
 */
	$EXT->call_hook('post_system');
"
      associated_elems
      end
    end

    artifact 173058 "Common"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * Common Functions
 *
 * Loads the base classes and executes the request.
 *
 * @package		CodeIgniter
 * @subpackage	CodeIgniter
 * @category	Common Functions
 * @author		EllisLab Dev Team
 * @link		https://codeigniter.com/user_guide/
 */

// ------------------------------------------------------------------------

if ( ! function_exists('is_php'))
{
	/**
	 * Determines if the current version of PHP is equal to or greater than the supplied value
	 *
	 * @param	string
	 * @return	bool	TRUE if the current version is $version or higher
	 */
	function is_php($version)
	{
		static $_is_php;
		$version = (string) $version;

		if ( ! isset($_is_php[$version]))
		{
			$_is_php[$version] = version_compare(PHP_VERSION, $version, '>=');
		}

		return $_is_php[$version];
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('is_really_writable'))
{
	/**
	 * Tests for file writability
	 *
	 * is_writable() returns TRUE on Windows servers when you really can't write to
	 * the file, based on the read-only attribute. is_writable() is also unreliable
	 * on Unix servers if safe_mode is on.
	 *
	 * @link	https://bugs.php.net/bug.php?id=54709
	 * @param	string
	 * @return	bool
	 */
	function is_really_writable($file)
	{
		// If we're on a Unix server with safe_mode off we call is_writable
		if (DIRECTORY_SEPARATOR === '/' && (is_php('5.4') OR ! ini_get('safe_mode')))
		{
			return is_writable($file);
		}

		/* For Windows servers and safe_mode \"on\" installations we'll actually
		 * write a file then read it. Bah...
		 */
		if (is_dir($file))
		{
			$file = rtrim($file, '/').'/'.md5(mt_rand());
			if (($fp = @fopen($file, 'ab')) === FALSE)
			{
				return FALSE;
			}

			fclose($fp);
			@chmod($file, 0777);
			@unlink($file);
			return TRUE;
		}
		elseif ( ! is_file($file) OR ($fp = @fopen($file, 'ab')) === FALSE)
		{
			return FALSE;
		}

		fclose($fp);
		return TRUE;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('load_class'))
{
	/**
	 * Class registry
	 *
	 * This function acts as a singleton. If the requested class does not
	 * exist it is instantiated and set to a static variable. If it has
	 * previously been instantiated the variable is returned.
	 *
	 * @param	string	the class name being requested
	 * @param	string	the directory where the class should be found
	 * @param	mixed	an optional argument to pass to the class constructor
	 * @return	object
	 */
	function &load_class($class, $directory = 'libraries', $param = NULL)
	{
		static $_classes = array();

		// Does the class exist? If so, we're done...
		if (isset($_classes[$class]))
		{
			return $_classes[$class];
		}

		$name = FALSE;

		// Look for the class first in the local application/libraries folder
		// then in the native system/libraries folder
		foreach (array(APPPATH, BASEPATH) as $path)
		{
			if (file_exists($path.$directory.'/'.$class.'.php'))
			{
				$name = 'CI_'.$class;

				if (class_exists($name, FALSE) === FALSE)
				{
					require_once($path.$directory.'/'.$class.'.php');
				}

				break;
			}
		}

		// Is the request a class extension? If so we load it too
		if (file_exists(APPPATH.$directory.'/'.config_item('subclass_prefix').$class.'.php'))
		{
			$name = config_item('subclass_prefix').$class;

			if (class_exists($name, FALSE) === FALSE)
			{
				require_once(APPPATH.$directory.'/'.$name.'.php');
			}
		}

		// Did we find the class?
		if ($name === FALSE)
		{
			// Note: We use exit() rather than show_error() in order to avoid a
			// self-referencing loop with the Exceptions class
			set_status_header(503);
			echo 'Unable to locate the specified class: '.$class.'.php';
			exit(5); // EXIT_UNK_CLASS
		}

		// Keep track of what we just loaded
		is_loaded($class);

		$_classes[$class] = isset($param)
			? new $name($param)
			: new $name();
		return $_classes[$class];
	}
}

// --------------------------------------------------------------------

if ( ! function_exists('is_loaded'))
{
	/**
	 * Keeps track of which libraries have been loaded. This function is
	 * called by the load_class() function above
	 *
	 * @param	string
	 * @return	array
	 */
	function &is_loaded($class = '')
	{
		static $_is_loaded = array();

		if ($class !== '')
		{
			$_is_loaded[strtolower($class)] = $class;
		}

		return $_is_loaded;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('get_config'))
{
	/**
	 * Loads the main config.php file
	 *
	 * This function lets us grab the config file even if the Config class
	 * hasn't been instantiated yet
	 *
	 * @param	array
	 * @return	array
	 */
	function &get_config(Array $replace = array())
	{
		static $config;

		if (empty($config))
		{
			$file_path = APPPATH.'config/config.php';
			$found = FALSE;
			if (file_exists($file_path))
			{
				$found = TRUE;
				require($file_path);
			}

			// Is the config file in the environment folder?
			if (file_exists($file_path = APPPATH.'config/'.ENVIRONMENT.'/config.php'))
			{
				require($file_path);
			}
			elseif ( ! $found)
			{
				set_status_header(503);
				echo 'The configuration file does not exist.';
				exit(3); // EXIT_CONFIG
			}

			// Does the $config array exist in the file?
			if ( ! isset($config) OR ! is_array($config))
			{
				set_status_header(503);
				echo 'Your config file does not appear to be formatted correctly.';
				exit(3); // EXIT_CONFIG
			}
		}

		// Are any values being dynamically added or replaced?
		foreach ($replace as $key => $val)
		{
			$config[$key] = $val;
		}

		return $config;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('config_item'))
{
	/**
	 * Returns the specified config item
	 *
	 * @param	string
	 * @return	mixed
	 */
	function config_item($item)
	{
		static $_config;

		if (empty($_config))
		{
			// references cannot be directly assigned to static variables, so we use an array
			$_config[0] =& get_config();
		}

		return isset($_config[0][$item]) ? $_config[0][$item] : NULL;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('get_mimes'))
{
	/**
	 * Returns the MIME types array from config/mimes.php
	 *
	 * @return	array
	 */
	function &get_mimes()
	{
		static $_mimes;

		if (empty($_mimes))
		{
			$_mimes = file_exists(APPPATH.'config/mimes.php')
				? include(APPPATH.'config/mimes.php')
				: array();

			if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'))
			{
				$_mimes = array_merge($_mimes, include(APPPATH.'config/'.ENVIRONMENT.'/mimes.php'));
			}
		}

		return $_mimes;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('is_https'))
{
	/**
	 * Is HTTPS?
	 *
	 * Determines if the application is accessed via an encrypted
	 * (HTTPS) connection.
	 *
	 * @return	bool
	 */
	function is_https()
	{
		if ( ! empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off')
		{
			return TRUE;
		}
		elseif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && strtolower($_SERVER['HTTP_X_FORWARDED_PROTO']) === 'https')
		{
			return TRUE;
		}
		elseif ( ! empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off')
		{
			return TRUE;
		}

		return FALSE;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('is_cli'))
{

	/**
	 * Is CLI?
	 *
	 * Test to see if a request was made from the command line.
	 *
	 * @return 	bool
	 */
	function is_cli()
	{
		return (PHP_SAPI === 'cli' OR defined('STDIN'));
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('show_error'))
{
	/**
	 * Error Handler
	 *
	 * This function lets us invoke the exception class and
	 * display errors using the standard error template located
	 * in application/views/errors/error_general.php
	 * This function will send the error page directly to the
	 * browser and exit.
	 *
	 * @param	string
	 * @param	int
	 * @param	string
	 * @return	void
	 */
	function show_error($message, $status_code = 500, $heading = 'An Error Was Encountered')
	{
		$status_code = abs($status_code);
		if ($status_code < 100)
		{
			$exit_status = $status_code + 9; // 9 is EXIT__AUTO_MIN
			$status_code = 500;
		}
		else
		{
			$exit_status = 1; // EXIT_ERROR
		}

		$_error =& load_class('Exceptions', 'core');
		echo $_error->show_error($heading, $message, 'error_general', $status_code);
		exit($exit_status);
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('show_404'))
{
	/**
	 * 404 Page Handler
	 *
	 * This function is similar to the show_error() function above
	 * However, instead of the standard error template it displays
	 * 404 errors.
	 *
	 * @param	string
	 * @param	bool
	 * @return	void
	 */
	function show_404($page = '', $log_error = TRUE)
	{
		$_error =& load_class('Exceptions', 'core');
		$_error->show_404($page, $log_error);
		exit(4); // EXIT_UNKNOWN_FILE
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('log_message'))
{
	/**
	 * Error Logging Interface
	 *
	 * We use this as a simple mechanism to access the logging
	 * class and send messages to be logged.
	 *
	 * @param	string	the error level: 'error', 'debug' or 'info'
	 * @param	string	the error message
	 * @return	void
	 */
	function log_message($level, $message)
	{
		static $_log;

		if ($_log === NULL)
		{
			// references cannot be directly assigned to static variables, so we use an array
			$_log[0] =& load_class('Log', 'core');
		}

		$_log[0]->write_log($level, $message);
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('set_status_header'))
{
	/**
	 * Set HTTP Status Header
	 *
	 * @param	int	the status code
	 * @param	string
	 * @return	void
	 */
	function set_status_header($code = 200, $text = '')
	{
		if (is_cli())
		{
			return;
		}

		if (empty($code) OR ! is_numeric($code))
		{
			show_error('Status codes must be numeric', 500);
		}

		if (empty($text))
		{
			is_int($code) OR $code = (int) $code;
			$stati = array(
				100	=> 'Continue',
				101	=> 'Switching Protocols',

				200	=> 'OK',
				201	=> 'Created',
				202	=> 'Accepted',
				203	=> 'Non-Authoritative Information',
				204	=> 'No Content',
				205	=> 'Reset Content',
				206	=> 'Partial Content',

				300	=> 'Multiple Choices',
				301	=> 'Moved Permanently',
				302	=> 'Found',
				303	=> 'See Other',
				304	=> 'Not Modified',
				305	=> 'Use Proxy',
				307	=> 'Temporary Redirect',

				400	=> 'Bad Request',
				401	=> 'Unauthorized',
				402	=> 'Payment Required',
				403	=> 'Forbidden',
				404	=> 'Not Found',
				405	=> 'Method Not Allowed',
				406	=> 'Not Acceptable',
				407	=> 'Proxy Authentication Required',
				408	=> 'Request Timeout',
				409	=> 'Conflict',
				410	=> 'Gone',
				411	=> 'Length Required',
				412	=> 'Precondition Failed',
				413	=> 'Request Entity Too Large',
				414	=> 'Request-URI Too Long',
				415	=> 'Unsupported Media Type',
				416	=> 'Requested Range Not Satisfiable',
				417	=> 'Expectation Failed',
				422	=> 'Unprocessable Entity',
				426	=> 'Upgrade Required',
				428	=> 'Precondition Required',
				429	=> 'Too Many Requests',
				431	=> 'Request Header Fields Too Large',

				500	=> 'Internal Server Error',
				501	=> 'Not Implemented',
				502	=> 'Bad Gateway',
				503	=> 'Service Unavailable',
				504	=> 'Gateway Timeout',
				505	=> 'HTTP Version Not Supported',
				511	=> 'Network Authentication Required',
			);

			if (isset($stati[$code]))
			{
				$text = $stati[$code];
			}
			else
			{
				show_error('No status text available. Please check your status code number or supply your own message text.', 500);
			}
		}

		if (strpos(PHP_SAPI, 'cgi') === 0)
		{
			header('Status: '.$code.' '.$text, TRUE);
			return;
		}

		$server_protocol = (isset($_SERVER['SERVER_PROTOCOL']) && in_array($_SERVER['SERVER_PROTOCOL'], array('HTTP/1.0', 'HTTP/1.1', 'HTTP/2'), TRUE))
			? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.1';
		header($server_protocol.' '.$code.' '.$text, TRUE, $code);
	}
}

// --------------------------------------------------------------------

if ( ! function_exists('_error_handler'))
{
	/**
	 * Error Handler
	 *
	 * This is the custom error handler that is declared at the (relative)
	 * top of CodeIgniter.php. The main reason we use this is to permit
	 * PHP errors to be logged in our own log files since the user may
	 * not have access to server logs. Since this function effectively
	 * intercepts PHP errors, however, we also need to display errors
	 * based on the current error_reporting level.
	 * We do that with the use of a PHP error template.
	 *
	 * @param	int	$severity
	 * @param	string	$message
	 * @param	string	$filepath
	 * @param	int	$line
	 * @return	void
	 */
	function _error_handler($severity, $message, $filepath, $line)
	{
		$is_error = (((E_ERROR | E_PARSE | E_COMPILE_ERROR | E_CORE_ERROR | E_USER_ERROR) & $severity) === $severity);

		// When an error occurred, set the status header to '500 Internal Server Error'
		// to indicate to the client something went wrong.
		// This can't be done within the $_error->show_php_error method because
		// it is only called when the display_errors flag is set (which isn't usually
		// the case in a production environment) or when errors are ignored because
		// they are above the error_reporting threshold.
		if ($is_error)
		{
			set_status_header(500);
		}

		// Should we ignore the error? We'll get the current error_reporting
		// level and add its bits with the severity bits to find out.
		if (($severity & error_reporting()) !== $severity)
		{
			return;
		}

		$_error =& load_class('Exceptions', 'core');
		$_error->log_exception($severity, $message, $filepath, $line);

		// Should we display the error?
		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
		{
			$_error->show_php_error($severity, $message, $filepath, $line);
		}

		// If the error is fatal, the execution of the script should be stopped because
		// errors can't be recovered from. Halting the script conforms with PHP's
		// default error handling. See http://www.php.net/manual/en/errorfunc.constants.php
		if ($is_error)
		{
			exit(1); // EXIT_ERROR
		}
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('_exception_handler'))
{
	/**
	 * Exception Handler
	 *
	 * Sends uncaught exceptions to the logger and displays them
	 * only if display_errors is On so that they don't show up in
	 * production environments.
	 *
	 * @param	Exception	$exception
	 * @return	void
	 */
	function _exception_handler($exception)
	{
		$_error =& load_class('Exceptions', 'core');
		$_error->log_exception('error', 'Exception: '.$exception->getMessage(), $exception->getFile(), $exception->getLine());

		is_cli() OR set_status_header(500);
		// Should we display the error?
		if (str_ireplace(array('off', 'none', 'no', 'false', 'null'), '', ini_get('display_errors')))
		{
			$_error->show_exception($exception);
		}

		exit(1); // EXIT_ERROR
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('_shutdown_handler'))
{
	/**
	 * Shutdown Handler
	 *
	 * This is the shutdown handler that is declared at the top
	 * of CodeIgniter.php. The main reason we use this is to simulate
	 * a complete custom exception handler.
	 *
	 * E_STRICT is purposively neglected because such events may have
	 * been caught. Duplication or none? None is preferred for now.
	 *
	 * @link	http://insomanic.me.uk/post/229851073/php-trick-catching-fatal-errors-e-error-with-a
	 * @return	void
	 */
	function _shutdown_handler()
	{
		$last_error = error_get_last();
		if (isset($last_error) &&
			($last_error['type'] & (E_ERROR | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING)))
		{
			_error_handler($last_error['type'], $last_error['message'], $last_error['file'], $last_error['line']);
		}
	}
}

// --------------------------------------------------------------------

if ( ! function_exists('remove_invisible_characters'))
{
	/**
	 * Remove Invisible Characters
	 *
	 * This prevents sandwiching null characters
	 * between ascii characters, like Java\\0script.
	 *
	 * @param	string
	 * @param	bool
	 * @return	string
	 */
	function remove_invisible_characters($str, $url_encoded = TRUE)
	{
		$non_displayables = array();

		// every control character except newline (dec 10),
		// carriage return (dec 13) and horizontal tab (dec 09)
		if ($url_encoded)
		{
			$non_displayables[] = '/%0[0-8bcef]/i';	// url encoded 00-08, 11, 12, 14, 15
			$non_displayables[] = '/%1[0-9a-f]/i';	// url encoded 16-31
			$non_displayables[] = '/%7f/i';	// url encoded 127
		}

		$non_displayables[] = '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S';	// 00-08, 11, 12, 14-31, 127

		do
		{
			$str = preg_replace($non_displayables, '', $str, -1, $count);
		}
		while ($count);

		return $str;
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('html_escape'))
{
	/**
	 * Returns HTML escaped variable.
	 *
	 * @param	mixed	$var		The input string or array of strings to be escaped.
	 * @param	bool	$double_encode	$double_encode set to FALSE prevents escaping twice.
	 * @return	mixed			The escaped string or array of strings as a result.
	 */
	function html_escape($var, $double_encode = TRUE)
	{
		if (empty($var))
		{
			return $var;
		}

		if (is_array($var))
		{
			foreach (array_keys($var) as $key)
			{
				$var[$key] = html_escape($var[$key], $double_encode);
			}

			return $var;
		}

		return htmlspecialchars($var, ENT_QUOTES, config_item('charset'), $double_encode);
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('_stringify_attributes'))
{
	/**
	 * Stringify attributes for use in HTML tags.
	 *
	 * Helper function used to convert a string, array, or object
	 * of attributes to a string.
	 *
	 * @param	mixed	string, array, object
	 * @param	bool
	 * @return	string
	 */
	function _stringify_attributes($attributes, $js = FALSE)
	{
		$atts = NULL;

		if (empty($attributes))
		{
			return $atts;
		}

		if (is_string($attributes))
		{
			return ' '.$attributes;
		}

		$attributes = (array) $attributes;

		foreach ($attributes as $key => $val)
		{
			$atts .= ($js) ? $key.'='.$val.',' : ' '.$key.'=\"'.$val.'\"';
		}

		return rtrim($atts, ',');
	}
}

// ------------------------------------------------------------------------

if ( ! function_exists('function_usable'))
{
	/**
	 * Function usable
	 *
	 * Executes a function_exists() check, and if the Suhosin PHP
	 * extension is loaded - checks whether the function that is
	 * checked might be disabled in there as well.
	 *
	 * This is useful as function_exists() will return FALSE for
	 * functions disabled via the *disable_functions* php.ini
	 * setting, but not for *suhosin.executor.func.blacklist* and
	 * *suhosin.executor.disable_eval*. These settings will just
	 * terminate script execution if a disabled function is executed.
	 *
	 * The above described behavior turned out to be a bug in Suhosin,
	 * but even though a fix was committed for 0.9.34 on 2012-02-12,
	 * that version is yet to be released. This function will therefore
	 * be just temporary, but would probably be kept for a few years.
	 *
	 * @link	http://www.hardened-php.net/suhosin/
	 * @param	string	$function_name	Function to check for
	 * @return	bool	TRUE if the function exists and is safe to call,
	 *			FALSE otherwise.
	 */
	function function_usable($function_name)
	{
		static $_suhosin_func_blacklist;

		if (function_exists($function_name))
		{
			if ( ! isset($_suhosin_func_blacklist))
			{
				$_suhosin_func_blacklist = extension_loaded('suhosin')
					? explode(',', trim(ini_get('suhosin.executor.func.blacklist')))
					: array();
			}

			return ! in_array($function_name, $_suhosin_func_blacklist, TRUE);
		}

		return FALSE;
	}
}
"
      associated_elems
      end
    end

    artifact 173186 "Config"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');
"
      associated_elems
      end
    end

    artifact 173314 "Controller"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 155394 // CI_Controller
      end
    end

    artifact 173442 "Exceptions"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 155522 // CI_Exceptions
      end
    end

    artifact 173570 "Hooks"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 155650 // CI_Hooks
      end
    end

    artifact 173698 "Input"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');
"
      associated_elems
      end
    end

    artifact 173826 "Lang"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');
"
      associated_elems
      end
    end

    artifact 173954 "Loader"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');
"
      associated_elems
      end
    end

    artifact 174082 "Log"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156162 // CI_Log
      end
    end

    artifact 174210 "Model"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156290 // CI_Model
      end
    end

    artifact 174338 "Output"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156418 // CI_Output
      end
    end

    artifact 174466 "Router"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156546 // CI_Router
      end
    end

    artifact 174594 "Security"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156674 // CI_Security
      end
    end

    artifact 174722 "URI"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156802 // CI_URI
      end
    end

    artifact 174850 "Utf8"
      stereotype "source"
      php_src "<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2019, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2019, British Columbia Institute of Technology (https://bcit.ca/)
 * @license	https://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 2.0.0
 * @filesource
 */
defined('BASEPATH') OR exit('No direct script access allowed');

${definition}

"
      associated_elems
	class_ref 156930 // CI_Utf8
      end
    end
  end

  classview 138114 "core"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 155138 "CI_Benchmark"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Benchmark Class

This class enables you to mark points and calculate the time difference
between them. Memory consumption can also be displayed.

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/benchmark.html"
      attribute 228482 "marker"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of all benchmark markers

@var	${type}"
      end

      operation 338562 "mark"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment "Set a benchmark marker

Multiple calls to this function can be made so that several
execution points can be timed.

@param	${t0}	${p0}	Marker name
@return	${type}"
      end

      operation 338690 "elapsed_time"
	public explicit_return_type "string"
	nparams 3
	  param in name "point1" explicit_type "string"
	    defaultvalue "''"
	  param in name "point2" explicit_type "string"
	    defaultvalue "''"
	  param in name "decimals" explicit_type "int"
	    defaultvalue "4"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Elapsed time

Calculates the time difference between two marked points.

If the first parameter is empty this function instead returns the
{elapsed_time} pseudo-variable. This permits the full system
execution time to be shown in a template. The output class will
swap the real value for this variable.

@param	${t0}	${p0}		A particular marked point
@param	${t1}	${p1}		A particular marked point
@param	${t2}	${p2}	Number of decimal places

@return	${type}	Calculated elapsed time on success,
			an '{elapsed_string}' if $point1 is empty
			or an empty string if $point1 is not found."
      end

      operation 338818 "memory_usage"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Memory Usage

Simply returns the {memory_usage} marker.

This permits it to be put it anywhere in a template
without the memory being calculated until the end.
The output class will swap the real value for this variable.

@return	${type}	'{memory_usage}'"
      end
    end

    class 155266 "CI_Config"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Config Class

This class contains functions that enable config files to be managed

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/config.html"
      attribute 228610 "config"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of all loaded config values

@var	${type}"
      end

      attribute 228738 "is_loaded"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of all loaded config files

@var	${type}"
      end

      attribute 228866 "_config_paths"
	public explicit_type "array"
	init_value " 	array(APPPATH)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of paths to search when trying to load a config file.

@used-by	CI_Loader
@var		${type}"
      end

      operation 338946 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Class constructor

Sets the $config data from the primary config.php file as a class variable.

@return	${type}"
      end

      operation 339074 "load"
	public explicit_return_type "bool"
	nparams 3
	  param in name "file" explicit_type "string"
	    defaultvalue "''"
	  param in name "use_sections" explicit_type "bool"
	    defaultvalue "FALSE"
	  param in name "fail_gracefully" explicit_type "bool"
	    defaultvalue "FALSE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Load Config File

@param	${t0}	${p0}			Configuration file name
@param	${t1}	${p1}		Whether configuration values should be loaded into their own section
@param	${t2}	${p2}	Whether to just return FALSE or display an error message
@return	${type}	TRUE if the file was loaded correctly or FALSE on failure"
      end

      operation 339202 "item"
	public explicit_return_type "string"
	nparams 2
	  param in name "item" explicit_type ""
	  param in name "index" explicit_type ""
	    defaultvalue "''"
	
	
	php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
      end
    end

    class 155394 "CI_Controller"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Application Controller Class

This class object is the super class that every library in
CodeIgniter will be assigned to.

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/general/controllers.html"
      attribute 228994 "instance"
	class_attribute private explicit_type "object"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reference to the CI singleton

@var	${type}"
      end

      operation 339330 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 339458 "get_instance"
	class_operation public explicit_return_type "object"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function &${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get the CI singleton

@static
@return	${type}"
      end
    end

    class 155522 "CI_Exceptions"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Exceptions Class

@package		CodeIgniter
@subpackage	Libraries
@category	Exceptions
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/exceptions.html"
      attribute 229122 "ob_level"
	public explicit_type "int"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Nesting level of the output buffering mechanism

@var	${type}"
      end

      attribute 229250 "levels"
	public explicit_type "array"
	init_value "  array(
		E_ERROR			=>	'Error',
		E_WARNING		=>	'Warning',
		E_PARSE			=>	'Parsing Error',
		E_NOTICE		=>	'Notice',
		E_CORE_ERROR		=>	'Core Error',
		E_CORE_WARNING		=>	'Core Warning',
		E_COMPILE_ERROR		=>	'Compile Error',
		E_COMPILE_WARNING	=>	'Compile Warning',
		E_USER_ERROR		=>	'User Error',
		E_USER_WARNING		=>	'User Warning',
		E_USER_NOTICE		=>	'User Notice',
		E_STRICT		=>	'Runtime Notice'
	)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of available error levels

@var	${type}"
      end

      operation 339586 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 339714 "log_exception"
	public explicit_return_type "void"
	nparams 4
	  param in name "severity" explicit_type "int"
	  param in name "message" explicit_type "string"
	  param in name "filepath" explicit_type "string"
	  param in name "line" explicit_type "int"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Exception Logger

Logs PHP generated error messages

@param	${t0}	${p0}	Log level
@param	${t1}	${p1}	Error message
@param	${t2}	${p2}	File path
@param	${t3}	${p3}		Line number
@return	${type}"
      end

      operation 339842 "show_404"
	public explicit_return_type "void"
	nparams 2
	  param in name "page" explicit_type "string"
	    defaultvalue "''"
	  param in name "log_error" explicit_type "bool"
	    defaultvalue "TRUE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

404 Error Handler

@uses	CI_Exceptions::show_error()

@param	${t0}	${p0}		Page URI
@param 	${t1}	${p1}	Whether to log the error
@return	${type}"
      end

      operation 339970 "show_error"
	public explicit_return_type "string"
	nparams 4
	  param in name "heading" explicit_type "string"
	  param in name "message" explicit_type "string|string[]"
	  param in name "template" explicit_type "string"
	    defaultvalue "'error_general'"
	  param in name "status_code" explicit_type "int"
	    defaultvalue "500"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

General Error Page

Takes an error message as input (either as a string or an array)
and displays it using the specified template.

@param	${t0}		${p0}	Page heading
@param	${t1}	${p1}	Error message
@param	${t2}		${p2}	Template name
@param 	${t3}		${p3}	(default: 500)

@return	${type}	Error page output"
      end

      operation 340098 "show_exception"
	public explicit_return_type ""
	nparams 1
	  param in name "exception" explicit_type ""
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------"
      end

      operation 340226 "show_php_error"
	public explicit_return_type "void"
	nparams 4
	  param in name "severity" explicit_type "int"
	  param in name "message" explicit_type "string"
	  param in name "filepath" explicit_type "string"
	  param in name "line" explicit_type "int"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Native PHP error handler

@param	${t0}	${p0}	Error level
@param	${t1}	${p1}	Error message
@param	${t2}	${p2}	File path
@param	${t3}	${p3}		Line number
@return	${type}"
      end
    end

    class 155650 "CI_Hooks"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hooks Class

Provides a mechanism to extend the base system without hacking.

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/general/hooks.html"
      attribute 229378 "enabled"
	public explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Determines whether hooks are enabled

@var	${type}"
      end

      attribute 229506 "hooks"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of all hooks set in config/hooks.php

@var	${type}"
      end

      attribute 229634 "_objects"
	protected explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array with class objects to use hooks methods

@var ${type}"
      end

      attribute 229762 "_in_progress"
	protected explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "In progress flag

Determines whether hook is in progress, used to prevent infinte loops

@var	${type}"
      end

      operation 340354 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 340482 "call_hook"
	public explicit_return_type "bool"
	nparams 1
	  param in name "which" explicit_type "string"
	    defaultvalue "''"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Call Hook

Calls a particular hook. Called by CodeIgniter.php.

@uses	CI_Hooks::_run_hook()

@param	${t0}	${p0}	Hook name
@return	${type}	TRUE on success or FALSE on failure"
      end

      operation 340610 "_run_hook"
	protected explicit_return_type "bool"
	nparams 1
	  param in name "data" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Run Hook

Runs a particular hook

@param	${t0}	${p0}	Hook details
@return	${type}	TRUE on success or FALSE on failure"
      end
    end

    class 155778 "CI_Input"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Input Class

Pre-processes global input data for security

@package		CodeIgniter
@subpackage	Libraries
@category	Input
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/input.html"
      attribute 229890 "ip_address"
	protected explicit_type "string"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "IP address of the current user

@var	${type}"
      end

      attribute 230018 "_allow_get_array"
	protected explicit_type "bool"
	init_value "  TRUE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Allow GET array flag

If set to FALSE, then $_GET will be set to an empty array.

@var	${type}"
      end

      attribute 230146 "_standardize_newlines"
	protected explicit_type "bool"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Standardize new lines flag

If set to TRUE, then newlines are standardized.

@var	${type}"
      end

      attribute 230274 "_enable_xss"
	protected explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enable XSS flag

Determines whether the XSS filter is always active when
GET, POST or COOKIE data is encountered.
Set automatically based on config setting.

@var	${type}"
      end

      attribute 230402 "_enable_csrf"
	protected explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enable CSRF flag

Enables a CSRF cookie token to be set.
Set automatically based on config setting.

@var	${type}"
      end

      attribute 230530 "headers"
	protected explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of all HTTP request headers

@var ${type}"
      end

      attribute 230658 "_raw_input_stream"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Raw input stream data

Holds a cache of php://input contents

@var	${type}"
      end

      attribute 230786 "_input_stream"
	protected explicit_type "array"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Parsed input stream data

Parsed from php://input at runtime

@see	CI_Input::input_stream()
@var	${type}"
      end

      attribute 230914 "security"
	protected explicit_type ""
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 231042 "uni"
	protected explicit_type ""
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 340738 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Class constructor

Determines whether to globally enable the XSS processing
and whether to allow the $_GET array.

@return	${type}"
      end

      operation 340866 "_fetch_from_array"
	protected explicit_return_type "mixed"
	nparams 3
	  param inout name "array" explicit_type "array"
	  param in name "index" explicit_type "mixed"
	    defaultvalue "NULL"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}& ${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch from array

Internal method used to retrieve values from global arrays.

@param	${t0}	&$array		$_GET, $_POST, $_COOKIE, $_SERVER, etc.
@param	${t1}	${p1}		Index for item to be fetched from $array
@param	${t2}	${p2}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 340994 "get"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "mixed"
	    defaultvalue "NULL"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from the GET array

@param	${t0}	${p0}		Index for item to be fetched from $_GET
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341122 "post"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "mixed"
	    defaultvalue "NULL"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from the POST array

@param	${t0}	${p0}		Index for item to be fetched from $_POST
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341250 "post_get"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "string"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from POST data with fallback to GET

@param	${t0}	${p0}		Index for item to be fetched from $_POST or $_GET
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341378 "get_post"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "string"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from GET data with fallback to POST

@param	${t0}	${p0}		Index for item to be fetched from $_GET or $_POST
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341506 "cookie"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "mixed"
	    defaultvalue "NULL"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from the COOKIE array

@param	${t0}	${p0}		Index for item to be fetched from $_COOKIE
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341634 "server"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "mixed"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch an item from the SERVER array

@param	${t0}	${p0}		Index for item to be fetched from $_SERVER
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341762 "input_stream"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "index" explicit_type "string"
	    defaultvalue "NULL"
	  param in name "xss_clean" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " ------------------------------------------------------------------------

Fetch an item from the php://input stream

Useful when you need to access PUT, DELETE or PATCH request data.

@param	${t0}	${p0}		Index for item to be fetched
@param	${t1}	${p1}	Whether to apply XSS filtering
@return	${type}"
      end

      operation 341890 "set_cookie"
	public explicit_return_type "void"
	nparams 8
	  param in name "name" explicit_type "string|mixed[]"
	  param in name "value" explicit_type "string"
	    defaultvalue "''"
	  param in name "expire" explicit_type "int"
	    defaultvalue "''"
	  param in name "domain" explicit_type "string"
	    defaultvalue "''"
	  param in name "path" explicit_type "string"
	    defaultvalue "'/'"
	  param in name "prefix" explicit_type "string"
	    defaultvalue "''"
	  param in name "secure" explicit_type "bool"
	    defaultvalue "NULL"
	  param in name "httponly" explicit_type "bool"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}, ${p4}${v4}, ${p5}${v5}, ${p6}${v6}, ${p7}${v7}${)}${type}
{
  ${body}}
"
	
	
	comment " ------------------------------------------------------------------------

Set cookie

Accepts an arbitrary number of parameters (up to 7) or an associative
array in the first parameter containing all the values.

@param	${t0}	${p0}		Cookie name or an array containing parameters
@param	${t1}		${p1}		Cookie value
@param	${t2}		${p2}		Cookie expiration time in seconds
@param	${t3}		${p3}		Cookie domain (e.g.: '.yourdomain.com')
@param	${t4}		${p4}		Cookie path (default: '/')
@param	${t5}		${p5}		Cookie name prefix
@param	${t6}		${p6}		Whether to only transfer cookies via SSL
@param	${t7}		${p7}	Whether to only makes the cookie accessible via HTTP (no javascript)
@return	${type}"
      end

      operation 342018 "ip_address"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch the IP Address

Determines and validates the visitor's IP address.

@return	${type}	IP address"
      end

      operation 342146 "valid_ip"
	public explicit_return_type "bool"
	nparams 2
	  param in name "ip" explicit_type "string"
	  param in name "which" explicit_type "string"
	    defaultvalue "''"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Validate IP Address

@param	${t0}	${p0}	IP address
@param	${t1}	${p1}	IP protocol: 'ipv4' or 'ipv6'
@return	${type}"
      end

      operation 342274 "user_agent"
	public explicit_return_type "string"
	nparams 1
	  param in name "xss_clean" explicit_type ""
	    defaultvalue "NULL"
	
	
	php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
      end
    end

    class 155906 "CI_Lang"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Language Class

@package		CodeIgniter
@subpackage	Libraries
@category	Language
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/language.html"
      attribute 231170 "language"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of translations

@var	${type}"
      end

      attribute 231298 "is_loaded"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of loaded language files

@var	${type}"
      end

      operation 342402 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 342530 "load"
	public explicit_return_type "void"
	nparams 5
	  param in name "langfile" explicit_type ""
	  param in name "idiom" explicit_type ""
	    defaultvalue "''"
	  param in name "return" explicit_type ""
	    defaultvalue "FALSE"
	  param in name "add_suffix" explicit_type ""
	    defaultvalue "TRUE"
	  param in name "alt_path" explicit_type ""
	    defaultvalue "''"
	
	
	php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
      end
    end

    class 156034 "CI_Loader"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Loader Class

Loads framework components.

@package		CodeIgniter
@subpackage	Libraries
@category	Loader
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/loader.html"
      attribute 231426 "_ci_ob_level"
	protected explicit_type "int"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " All these are set automatically. Don't mess with them.

Nesting level of the output buffering mechanism

@var	${type}"
      end

      attribute 231554 "_ci_view_paths"
	protected explicit_type "array"
	init_value " 	array(VIEWPATH	=> TRUE)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of paths to load views from

@var	${type}"
      end

      attribute 231682 "_ci_library_paths"
	protected explicit_type "array"
	init_value " 	array(APPPATH, BASEPATH)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of paths to load libraries from

@var	${type}"
      end

      attribute 231810 "_ci_model_paths"
	protected explicit_type "array"
	init_value " 	array(APPPATH)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of paths to load models from

@var	${type}"
      end

      attribute 231938 "_ci_helper_paths"
	protected explicit_type "array"
	init_value " 	array(APPPATH, BASEPATH)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of paths to load helpers from

@var	${type}"
      end

      attribute 232066 "_ci_cached_vars"
	protected explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of cached variables

@var	${type}"
      end

      attribute 232194 "_ci_classes"
	protected explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of loaded classes

@var	${type}"
      end

      attribute 232322 "_ci_models"
	protected explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of loaded models

@var	${type}"
      end

      attribute 232450 "_ci_helpers"
	protected explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of loaded helpers

@var	${type}"
      end

      attribute 232578 "_ci_varmap"
	protected explicit_type "array"
	init_value " 	array(
		'unit_test' => 'unit',
		'user_agent' => 'agent'
	)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of class name mappings

@var	${type}"
      end

      operation 342658 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Class constructor

Sets component load paths, gets the initial output buffering level.

@return	${type}"
      end

      operation 342786 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Initializer

@todo	Figure out a way to move this to the constructor
		without breaking *package_path*() methods.
@uses	CI_Loader::_ci_autoloader()
@used-by	CI_Controller::__construct()
@return	${type}"
      end

      operation 342914 "is_loaded"
	public explicit_return_type "string"
	nparams 1
	  param in name "class" explicit_type ""
	
	
	php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
      end
    end

    class 156162 "CI_Log"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Logging Class

@package		CodeIgniter
@subpackage	Libraries
@category	Logging
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/general/errors.html"
      attribute 232706 "_log_path"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Path to save log files

@var ${type}"
      end

      attribute 232834 "_file_permissions"
	protected explicit_type "int"
	init_value "  0644"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File permissions

@var	${type}"
      end

      attribute 232962 "_threshold"
	protected explicit_type "int"
	init_value "  1"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level of logging

@var ${type}"
      end

      attribute 233090 "_threshold_array"
	protected explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of threshold levels to log

@var ${type}"
      end

      attribute 233218 "_date_fmt"
	protected explicit_type "string"
	init_value "  'Y-m-d H:i:s'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Format of timestamp for log files

@var ${type}"
      end

      attribute 233346 "_file_ext"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Filename extension

@var	${type}"
      end

      attribute 233474 "_enabled"
	protected explicit_type "bool"
	init_value "  TRUE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not the logger can write to the log files

@var ${type}"
      end

      attribute 233602 "_levels"
	protected explicit_type "array"
	init_value "  array('ERROR' => 1, 'DEBUG' => 2, 'INFO' => 3, 'ALL' => 4)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Predefined logging levels

@var ${type}"
      end

      attribute 233730 "func_overload"
	class_attribute protected explicit_type "bool"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "mbstring.func_overload flag

@var	${type}"
      end

      operation 343042 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Class constructor

@return	${type}"
      end

      operation 343170 "write_log"
	public explicit_return_type "bool"
	nparams 2
	  param in name "level" explicit_type "string"
	  param in name "msg" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Write Log File

Generally this function will be called using the global log_message() function

@param	${t0}	${p0} 	The error level: 'error', 'debug' or 'info'
@param	${t1}	${p1} 	The error message
@return	${type}"
      end

      operation 343298 "_format_line"
	protected explicit_return_type "string"
	nparams 3
	  param in name "level" explicit_type "string"
	  param in name "date" explicit_type "string"
	  param in name "message" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Format the log line.

This is for extensibility of log formatting
If you want to change the log format, extend the CI_Log class and override this method

@param	${t0}	${p0} 	The error level
@param	${t1}	${p1} 	Formatted date string
@param	${t2}	${p2} 	The log message
@return	${type}	Formatted log line with a new line character '\\n' at the end"
      end

      operation 343426 "strlen"
	class_operation protected explicit_return_type "int"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Byte-safe strlen()

@param	${t0}	${p0}
@return	${type}"
      end

      operation 343554 "substr"
	class_operation protected explicit_return_type "string"
	nparams 3
	  param in name "str" explicit_type "string"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Byte-safe substr()

@param	${t0}	${p0}
@param	${t1}	${p1}
@param	${t2}	${p2}
@return	${type}"
      end
    end

    class 156290 "CI_Model"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Model Class

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/config.html"
      operation 343682 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@link	https://github.com/bcit-ci/CodeIgniter/issues/5332
@return	${type}"
      end

      operation 343810 "__get"
	public explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment "__get magic

Allows models to access CI's loaded classes using the same
syntax as controllers.

@param	${t0}	${p0}"
      end
    end

    class 156418 "CI_Output"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Output Class

Responsible for sending final output to the browser.

@package		CodeIgniter
@subpackage	Libraries
@category	Output
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/output.html"
      attribute 233858 "final_output"
	public explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Final output string

@var	${type}"
      end

      attribute 233986 "cache_expiration"
	public explicit_type "int"
	init_value "  0"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Cache expiration time

@var	${type}"
      end

      attribute 234114 "headers"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of server headers

@var	${type}"
      end

      attribute 234242 "mimes"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of mime types

@var	${type}"
      end

      attribute 234370 "mime_type"
	protected explicit_type "string"
	init_value "  'text/html'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mime-type for the current page

@var	${type}"
      end

      attribute 234498 "enable_profiler"
	public explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enable Profiler flag

@var	${type}"
      end

      attribute 234626 "_zlib_oc"
	protected explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "php.ini zlib.output_compression flag

@var	${type}"
      end

      attribute 234754 "_compress_output"
	protected explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CI output compression flag

@var	${type}"
      end

      attribute 234882 "_profiler_sections"
	protected explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of profiler sections

@var	${type}"
      end

      attribute 235010 "parse_exec_vars"
	public explicit_type "bool"
	init_value "  TRUE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Parse markers flag

Whether or not to parse variables like {elapsed_time} and {memory_usage}.

@var	${type}"
      end

      attribute 235138 "func_overload"
	class_attribute protected explicit_type "bool"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "mbstring.func_overload flag

@var	${type}"
      end

      operation 343938 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

Determines whether zLib output compression will be used.

@return	${type}"
      end

      operation 344066 "get_output"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get Output

Returns the current output string.

@return	${type}"
      end

      operation 344194 "set_output"
	public explicit_return_type "CI_Output"
	nparams 1
	  param in name "output" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Output

Sets the output string.

@param	${t0}	${p0}	Output data
@return	${type}"
      end

      operation 344322 "append_output"
	public explicit_return_type "CI_Output"
	nparams 1
	  param in name "output" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Append Output

Appends data onto the output string.

@param	${t0}	${p0}	Data to append
@return	${type}"
      end

      operation 344450 "set_header"
	public explicit_return_type "CI_Output"
	nparams 2
	  param in name "header" explicit_type "string"
	  param in name "replace" explicit_type "bool"
	    defaultvalue "TRUE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Header

Lets you set a server header which will be sent with the final output.

Note: If a file is cached, headers will not be sent.
@todo	We need to figure out how to permit headers to be cached.

@param	${t0}	${p0}		Header
@param	${t1}	${p1}	Whether to replace the old header value, if already set
@return	${type}"
      end

      operation 344578 "set_content_type"
	public explicit_return_type "CI_Output"
	nparams 2
	  param in name "mime_type" explicit_type "string"
	  param in name "charset" explicit_type "string"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Content-Type Header

@param	${t0}	${p0}	Extension of the file we're outputting
@param	${t1}	${p1}	Character set (default: NULL)
@return	${type}"
      end

      operation 344706 "get_content_type"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get Current Content-Type Header

@return	${type}	'text/html', if not already set"
      end

      operation 344834 "get_header"
	public explicit_return_type "string"
	nparams 1
	  param in name "header" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get Header

@param	${t0}	${p0}
@return	${type}"
      end

      operation 344962 "set_status_header"
	public explicit_return_type "CI_Output"
	nparams 2
	  param in name "code" explicit_type "int"
	    defaultvalue "200"
	  param in name "text" explicit_type "string"
	    defaultvalue "''"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set HTTP Status Header

As of version 1.7.2, this is an alias for common function
set_status_header().

@param	${t0}	${p0}	Status code (default: 200)
@param	${t1}	${p1}	Optional message
@return	${type}"
      end

      operation 345090 "enable_profiler"
	public explicit_return_type "CI_Output"
	nparams 1
	  param in name "val" explicit_type "bool"
	    defaultvalue "TRUE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Enable/disable Profiler

@param	${t0}	${p0}	TRUE to enable or FALSE to disable
@return	${type}"
      end

      operation 345218 "set_profiler_sections"
	public explicit_return_type "CI_Output"
	nparams 1
	  param in name "sections" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Profiler Sections

Allows override of default/config settings for
Profiler section display.

@param	${t0}	${p0}	Profiler sections
@return	${type}"
      end

      operation 345346 "cache"
	public explicit_return_type "CI_Output"
	nparams 1
	  param in name "time" explicit_type "int"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Cache

@param	${t0}	${p0}	Cache expiration time in minutes
@return	${type}"
      end

      operation 345474 "_display"
	public explicit_return_type "void"
	nparams 1
	  param in name "output" explicit_type "string"
	    defaultvalue "''"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Display Output

Processes and sends finalized output data to the browser along
with any server headers and profile data. It also stops benchmark
timers so the page rendering speed and memory usage can be shown.

Note: All \"view\" data is automatically put into $this->final_output
	 by controller class.

@uses	CI_Output::$final_output
@param	${t0}	${p0}	Output data override
@return	${type}"
      end

      operation 345602 "_write_cache"
	public explicit_return_type "void"
	nparams 1
	  param in name "output" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Write Cache

@param	${t0}	${p0}	Output data to cache
@return	${type}"
      end

      operation 345730 "_display_cache"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "CFG" explicit_type "object"
	  param inout name "URI" explicit_type "object"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}& ${p0}${v0}, & ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Update/serve cached output

@uses	CI_Config
@uses	CI_URI

@param	${t0}	&$CFG	CI_Config class instance
@param	${t1}	&$URI	CI_URI class instance
@return	${type}	TRUE on success or FALSE on failure"
      end

      operation 345858 "delete_cache"
	public explicit_return_type "bool"
	nparams 1
	  param in name "uri" explicit_type "string"
	    defaultvalue "''"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Delete cache

@param	${t0}	${p0}	URI string
@return	${type}"
      end

      operation 345986 "set_cache_header"
	public explicit_return_type "void"
	nparams 2
	  param in name "last_modified" explicit_type "int"
	  param in name "expiration" explicit_type "int"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set Cache Header

Set the HTTP headers to match the server-side file cache settings
in order to reduce bandwidth.

@param	${t0}	${p0}	Timestamp of when the page was last modified
@param	${t1}	${p1}	Timestamp of when should the requested page expire from cache
@return	${type}"
      end

      operation 346114 "strlen"
	class_operation protected explicit_return_type "int"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Byte-safe strlen()

@param	${t0}	${p0}
@return	${type}"
      end

      operation 346242 "substr"
	class_operation protected explicit_return_type "string"
	nparams 3
	  param in name "str" explicit_type "string"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Byte-safe substr()

@param	${t0}	${p0}
@param	${t1}	${p1}
@param	${t2}	${p2}
@return	${type}"
      end
    end

    class 156546 "CI_Router"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Router Class

Parses URIs and determines routing

@package		CodeIgniter
@subpackage	Libraries
@category	Libraries
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/general/routing.html"
      attribute 235266 "config"
	public explicit_type "object"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CI_Config class object

@var	${type}"
      end

      attribute 235394 "routes"
	public explicit_type "array"
	init_value " 	array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of routes

@var	${type}"
      end

      attribute 235522 "class"
	public explicit_type "string"
	init_value " 		''"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current class name

@var	${type}"
      end

      attribute 235650 "method"
	public explicit_type "string"
	init_value " 	'index'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current method name

@var	${type}"
      end

      attribute 235778 "directory"
	public explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Sub-directory that contains the requested controller class

@var	${type}"
      end

      attribute 235906 "default_controller"
	public explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default controller (and method if specific)

@var	${type}"
      end

      attribute 236034 "translate_uri_dashes"
	public explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Translate URI dashes

Determines whether dashes in controller & method segments
should be automatically replaced by underscores.

@var	${type}"
      end

      attribute 236162 "enable_query_strings"
	public explicit_type "bool"
	init_value "  FALSE"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enable query strings flag

Determines whether to use GET parameters or segment URIs

@var	${type}"
      end

      operation 346370 "__construct"
	public explicit_return_type "void"
	nparams 1
	  param in name "routing" explicit_type "array"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Class constructor

Runs the route mapping function.

@param	${t0}	${p0}
@return	${type}"
      end

      operation 346498 "_set_routing"
	protected explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set route mapping

Determines what should be served based on the URI request,
as well as any \"routes\" that have been set in the routing config file.

@return	${type}"
      end

      operation 346626 "_set_request"
	protected explicit_return_type "void"
	nparams 1
	  param in name "segments" explicit_type "array"
	    defaultvalue "array()"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set request route

Takes an array of URI segments as input and sets the class/method
to be called.

@used-by	CI_Router::_parse_routes()
@param	${t0}	${p0}	URI segments
@return	${type}"
      end

      operation 346754 "_set_default_controller"
	protected explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set default controller

@return	${type}"
      end

      operation 346882 "_validate_request"
	protected explicit_return_type "mixed"
	nparams 1
	  param in name "segments" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Validate request

Attempts validate the URI request and determine the controller path.

@used-by	CI_Router::_set_request()
@param	${t0}	${p0}	URI segments
@return	${type}	URI segments"
      end

      operation 347010 "_parse_routes"
	protected explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Parse Routes

Matches any routes that may exist in the config/routes.php file
against the URI to determine if the class/method need to be remapped.

@return	${type}"
      end

      operation 347138 "set_class"
	public explicit_return_type "void"
	nparams 1
	  param in name "class" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set class name

@param	${t0}	${p0}	Class name
@return	${type}"
      end

      operation 347266 "fetch_class"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch the current class

@deprecated	3.0.0	Read the 'class' property instead
@return	${type}"
      end

      operation 347394 "set_method"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set method name

@param	${t0}	${p0}	Method name
@return	${type}"
      end

      operation 347522 "fetch_method"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch the current method

@deprecated	3.0.0	Read the 'method' property instead
@return	${type}"
      end

      operation 347650 "set_directory"
	public explicit_return_type "void"
	nparams 2
	  param in name "dir" explicit_type "string"
	  param in name "append" explicit_type "bool"
	    defaultvalue "FALSE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set directory name

@param	${t0}	${p0}	Directory name
@param	${t1}	${p1}	Whether we're appending rather than setting the full value
@return	${type}"
      end

      operation 347778 "fetch_directory"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch directory

Feches the sub-directory (if any) that contains the requested
controller class.

@deprecated	3.0.0	Read the 'directory' property instead
@return	${type}"
      end
    end

    class 156674 "CI_Security"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Security Class

@package		CodeIgniter
@subpackage	Libraries
@category	Security
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/security.html"
      attribute 236290 "filename_bad_chars"
	public explicit_type "array"
	init_value " 	array(
		'../', '<!--', '-->', '<', '>',
		\"'\", '\"', '&', '$', '#',
		'{', '}', '[', ']', '=',
		';', '?', '%20', '%22',
		'%3c',		// <
		'%253c',	// <
		'%3e',		// >
		'%0e',		// >
		'%28',		// (
		'%29',		// )
		'%2528',	// (
		'%26',		// &
		'%24',		// $
		'%3f',		// ?
		'%3b',		// ;
		'%3d'		// =
	)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of sanitize filename strings

@var	${type}"
      end

      attribute 236418 "charset"
	public explicit_type "string"
	init_value "  'UTF-8'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Character set

Will be overridden by the constructor.

@var	${type}"
      end

      attribute 236546 "_xss_hash"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "XSS Hash

Random Hash for protecting URLs.

@var	${type}"
      end

      attribute 236674 "_csrf_hash"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CSRF Hash

Random hash for Cross Site Request Forgery protection cookie

@var	${type}"
      end

      attribute 236802 "_csrf_expire"
	protected explicit_type "int"
	init_value " 	7200"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CSRF Expire time

Expiration time for Cross Site Request Forgery protection cookie.
Defaults to two hours (in seconds).

@var	${type}"
      end

      attribute 236930 "_csrf_token_name"
	protected explicit_type "string"
	init_value " 	'ci_csrf_token'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CSRF Token name

Token name for Cross Site Request Forgery protection cookie.

@var	${type}"
      end

      attribute 237058 "_csrf_cookie_name"
	protected explicit_type "string"
	init_value " 	'ci_csrf_token'"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "CSRF Cookie name

Cookie name for Cross Site Request Forgery protection cookie.

@var	${type}"
      end

      attribute 237186 "_never_allowed_str"
	protected explicit_type "array"
	init_value " 	array(
		'document.cookie' => '[removed]',
		'(document).cookie' => '[removed]',
		'document.write'  => '[removed]',
		'(document).write'  => '[removed]',
		'.parentNode'     => '[removed]',
		'.innerHTML'      => '[removed]',
		'-moz-binding'    => '[removed]',
		'<!--'            => '&lt;!--',
		'-->'             => '--&gt;',
		'<![CDATA['       => '&lt;![CDATA[',
		'<comment>'	  => '&lt;comment&gt;',
		'<%'              => '&lt;&#37;'
	)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of never allowed strings

@var	${type}"
      end

      attribute 237314 "_never_allowed_regex"
	protected explicit_type "array"
	init_value "  array(
		'javascript\\s*:',
		'(\\(?document\\)?|\\(?window\\)?(\\.document)?)\\.(location|on\\w*)',
		'expression\\s*(\\(|&\\#40;)', // CSS and IE
		'vbscript\\s*:', // IE, surprise!
		'wscript\\s*:', // IE
		'jscript\\s*:', // IE
		'vbs\\s*:', // IE
		'Redirect\\s+30\\d',
		\"([\\\"'])?data\\s*:[^\\\\1]*?base64[^\\\\1]*?,[^\\\\1]*?\\\\1?\"
	)"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of never allowed regex replacements

@var	${type}"
      end

      operation 347906 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 348034 "csrf_verify"
	public explicit_return_type "CI_Security"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

CSRF Verify

@return	${type}"
      end

      operation 348162 "csrf_set_cookie"
	public explicit_return_type "CI_Security"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

CSRF Set Cookie

@codeCoverageIgnore
@return	${type}"
      end

      operation 348290 "csrf_show_error"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Show CSRF Error

@return	${type}"
      end

      operation 348418 "get_csrf_hash"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get CSRF Hash

@see		CI_Security::$_csrf_hash
@return 	${type}	CSRF hash"
      end

      operation 348546 "get_csrf_token_name"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get CSRF Token Name

@see		CI_Security::$_csrf_token_name
@return	${type}	CSRF token name"
      end

      operation 348674 "xss_clean"
	public explicit_return_type "string"
	nparams 2
	  param in name "str" explicit_type "string|string[]"
	  param in name "is_image" explicit_type "bool"
	    defaultvalue "FALSE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

XSS Clean

Sanitizes data so that Cross Site Scripting Hacks can be
prevented.  This method does a fair amount of work but
it is extremely thorough, designed to prevent even the
most obscure XSS attempts.  Nothing is ever 100% foolproof,
of course, but I haven't been able to get anything passed
the filter.

Note: Should only be used to deal with data upon submission.
	 It's not something that should be used for general
	 runtime processing.

@link	http://channel.bitflux.ch/wiki/XSS_Prevention
		Based in part on some code and ideas from Bitflux.

@link	http://ha.ckers.org/xss.html
		To help develop this script I used this great list of
		vulnerabilities along with a few other hacks I've
		harvested from examining vulnerabilities in other programs.

@param	${t0}	${p0}		Input data
@param 	${t1}		${p1}	Whether the input is an image
@return	${type}"
      end

      operation 348802 "xss_hash"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

XSS Hash

Generates the XSS hash if needed and returns it.

@see		CI_Security::$_xss_hash
@return	${type}	XSS hash"
      end

      operation 348930 "get_random_bytes"
	public explicit_return_type "string"
	nparams 1
	  param in name "length" explicit_type "int"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Get random bytes

@param	${t0}	${p0}	Output length
@return	${type}"
      end

      operation 349058 "entity_decode"
	public explicit_return_type "string"
	nparams 2
	  param in name "str" explicit_type "string"
	  param in name "charset" explicit_type "string"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

HTML Entities Decode

A replacement for html_entity_decode()

The reason we are not using html_entity_decode() by itself is because
while it is not technically correct to leave out the semicolon
at the end of an entity most browsers will still interpret the entity
correctly. html_entity_decode() does not convert entities without
semicolons, so we are left with our own little solution here. Bummer.

@link	http://php.net/html-entity-decode

@param	${t0}	${p0}		Input
@param	${t1}	${p1}	Character set
@return	${type}"
      end

      operation 349186 "sanitize_filename"
	public explicit_return_type "string"
	nparams 2
	  param in name "str" explicit_type "string"
	  param in name "relative_path" explicit_type "bool"
	    defaultvalue "FALSE"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Sanitize Filename

@param	${t0}	${p0}		Input file name
@param 	${t1}	${p1}	Whether to preserve paths
@return	${type}"
      end

      operation 349314 "strip_image_tags"
	public explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " ----------------------------------------------------------------

Strip Image Tags

@param	${t0}	${p0}
@return	${type}"
      end

      operation 349442 "_urldecodespaces"
	protected explicit_return_type "string"
	nparams 1
	  param in name "matches" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " ----------------------------------------------------------------

URL-decode taking spaces into account

@see		https://github.com/bcit-ci/CodeIgniter/issues/4877
@param	${t0}	${p0}
@return	${type}"
      end

      operation 349570 "_compact_exploded_words"
	protected explicit_return_type "string"
	nparams 1
	  param in name "matches" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " ----------------------------------------------------------------

Compact Exploded Words

Callback method for xss_clean() to remove whitespace from
things like 'j a v a s c r i p t'.

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 349698 "_sanitize_naughty_html"
	protected explicit_return_type "string"
	nparams 1
	  param in name "matches" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Sanitize Naughty HTML

Callback method for xss_clean() to remove naughty HTML elements.

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 349826 "_js_link_removal"
	protected explicit_return_type "string"
	nparams 1
	  param in name "match" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

JS Link Removal

Callback method for xss_clean() to sanitize links.

This limits the PCRE backtracks, making it more performance friendly
and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in
PHP 5.2+ on link-heavy strings.

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 349954 "_js_img_removal"
	protected explicit_return_type "string"
	nparams 1
	  param in name "match" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

JS Image Removal

Callback method for xss_clean() to sanitize image tags.

This limits the PCRE backtracks, making it more performance friendly
and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in
PHP 5.2+ on image tag heavy strings.

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 350082 "_convert_attribute"
	protected explicit_return_type "string"
	nparams 1
	  param in name "match" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Attribute Conversion

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 350210 "_filter_attributes"
	protected explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Filter Attributes

Filters tag attributes for consistency and safety.

@used-by	CI_Security::_js_img_removal()
@used-by	CI_Security::_js_link_removal()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 350338 "_decode_entity"
	protected explicit_return_type "string"
	nparams 1
	  param in name "match" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

HTML Entity Decode Callback

@used-by	CI_Security::xss_clean()
@param	${t0}	${p0}
@return	${type}"
      end

      operation 350466 "_do_never_allowed"
	protected explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Do Never Allowed

@used-by	CI_Security::xss_clean()
@param 	${t0}
@return 	${type}"
      end

      operation 350594 "_csrf_set_hash"
	protected explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set CSRF Hash and Cookie

@return	${type}"
      end
    end

    class 156802 "CI_URI"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "URI Class

Parses URIs and determines routing

@package		CodeIgniter
@subpackage	Libraries
@category	URI
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/uri.html"
      attribute 237442 "keyval"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of cached URI segments

@var	${type}"
      end

      attribute 237570 "uri_string"
	public explicit_type "string"
	init_value "  ''"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current URI string

@var	${type}"
      end

      attribute 237698 "segments"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of URI segments

Starts at 1 instead of 0.

@var	${type}"
      end

      attribute 237826 "rsegments"
	public explicit_type "array"
	init_value "  array()"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "List of routed URI segments

Starts at 1 instead of 0.

@var	${type}"
      end

      attribute 237954 "_permitted_uri_chars"
	protected explicit_type "string"
	cpp_decl ""
	java_decl ""
	php_decl "  ${comment}${visibility}${const}${static}${var}${name}${value};
"
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Permitted URI chars

PCRE character group allowed in URI segments

@var	${type}"
      end

      operation 350722 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

@return	${type}"
      end

      operation 350850 "_set_uri_string"
	protected explicit_return_type "void"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Set URI String

@param 	${t0}	${p0}
@return	${type}"
      end

      operation 350978 "_parse_request_uri"
	protected explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Parse REQUEST_URI

Will parse REQUEST_URI and automatically detect the URI from it,
while fixing the query string if necessary.

@return	${type}"
      end

      operation 351106 "_parse_query_string"
	protected explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Parse QUERY_STRING

Will parse QUERY_STRING and automatically detect the URI from it.

@return	${type}"
      end

      operation 351234 "_parse_argv"
	protected explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Parse CLI arguments

Take each command line argument and assume it is a URI segment.

@return	${type}"
      end

      operation 351362 "_remove_relative_directory"
	protected explicit_return_type "string"
	nparams 1
	  param in name "uri" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Remove relative directory (../) and multi slashes (///)

Do some final cleaning of the URI and return it, currently only used in self::_parse_request_uri()

@param	${t0}	${p0}
@return	${type}"
      end

      operation 351490 "filter_uri"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}& ${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Filter URI

Filters segments for malicious characters.

@param	${t0}	${p0}
@return	${type}"
      end

      operation 351618 "segment"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "no_result" explicit_type "mixed"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch URI Segment

@see		CI_URI::$segments
@param	${t0}		${p0}		Index
@param	${t1}		${p1}	What to return if the segment index is not found
@return	${type}"
      end

      operation 351746 "rsegment"
	public explicit_return_type "mixed"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "no_result" explicit_type "mixed"
	    defaultvalue "NULL"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch URI \"routed\" Segment

Returns the re-routed URI segment (assuming routing rules are used)
based on the index provided. If there is no routing, will return
the same result as CI_URI::segment().

@see		CI_URI::$rsegments
@see		CI_URI::segment()
@param	${t0}		${p0}		Index
@param	${t1}		${p1}	What to return if the segment index is not found
@return	${type}"
      end

      operation 351874 "uri_to_assoc"
	public explicit_return_type "array"
	nparams 2
	  param in name "n" explicit_type "int"
	    defaultvalue "3"
	  param in name "default" explicit_type "array"
	    defaultvalue "array()"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

URI to assoc

Generates an associative array of URI data starting at the supplied
segment index. For example, if this is your URI:

	example.com/user/search/name/joe/location/UK/gender/male

You can use this method to generate an array with this prototype:

	array (
		name => joe
		location => UK
		gender => male
	 )

@param	${t0}	${p0}		Index (default: 3)
@param	${t1}	${p1}	Default values
@return	${type}"
      end

      operation 352002 "ruri_to_assoc"
	public explicit_return_type "array"
	nparams 2
	  param in name "n" explicit_type "int"
	    defaultvalue "3"
	  param in name "default" explicit_type "array"
	    defaultvalue "array()"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Routed URI to assoc

Identical to CI_URI::uri_to_assoc(), only it uses the re-routed
segment array.

@see		CI_URI::uri_to_assoc()
@param 	${t0}	${p0}		Index (default: 3)
@param 	${t1}	${p1}	Default values
@return 	${type}"
      end

      operation 352130 "_uri_to_assoc"
	protected explicit_return_type "array"
	nparams 3
	  param in name "n" explicit_type "int"
	    defaultvalue "3"
	  param in name "default" explicit_type "array"
	    defaultvalue "array()"
	  param in name "which" explicit_type "string"
	    defaultvalue "'segment'"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Internal URI-to-assoc

Generates a key/value pair from the URI string or re-routed URI string.

@used-by	CI_URI::uri_to_assoc()
@used-by	CI_URI::ruri_to_assoc()
@param	${t0}	${p0}		Index (default: 3)
@param	${t1}	${p1}	Default values
@param	${t2}	${p2}		Array name ('segment' or 'rsegment')
@return	${type}"
      end

      operation 352258 "assoc_to_uri"
	public explicit_return_type "string"
	nparams 1
	  param in name "array" explicit_type "array"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Assoc to URI

Generates a URI string from an associative array.

@param	${t0}	${p0}	Input array of key/value pairs
@return	${type}	URI string"
      end

      operation 352386 "slash_segment"
	public explicit_return_type "string"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "where" explicit_type "string"
	    defaultvalue "'trailing'"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Slash segment

Fetches an URI segment with a slash.

@param	${t0}	${p0}	Index
@param	${t1}	${p1}	Where to add the slash ('trailing' or 'leading')
@return	${type}"
      end

      operation 352514 "slash_rsegment"
	public explicit_return_type "string"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "where" explicit_type "string"
	    defaultvalue "'trailing'"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Slash routed segment

Fetches an URI routed segment with a slash.

@param	${t0}	${p0}	Index
@param	${t1}	${p1}	Where to add the slash ('trailing' or 'leading')
@return	${type}"
      end

      operation 352642 "_slash_segment"
	protected explicit_return_type "string"
	nparams 3
	  param in name "n" explicit_type "int"
	  param in name "where" explicit_type "string"
	    defaultvalue "'trailing'"
	  param in name "which" explicit_type "string"
	    defaultvalue "'segment'"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Internal Slash segment

Fetches an URI Segment and adds a slash to it.

@used-by	CI_URI::slash_segment()
@used-by	CI_URI::slash_rsegment()

@param	${t0}	${p0}	Index
@param	${t1}	${p1}	Where to add the slash ('trailing' or 'leading')
@param	${t2}	${p2}	Array name ('segment' or 'rsegment')
@return	${type}"
      end

      operation 352770 "segment_array"
	public explicit_return_type "array"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Segment Array

@return	${type}	CI_URI::$segments"
      end

      operation 352898 "rsegment_array"
	public explicit_return_type "array"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Routed Segment Array

@return	${type}	CI_URI::$rsegments"
      end

      operation 353026 "total_segments"
	public explicit_return_type "int"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Total number of segments

@return	${type}"
      end

      operation 353154 "total_rsegments"
	public explicit_return_type "int"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Total number of routed segments

@return	${type}"
      end

      operation 353282 "uri_string"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch URI string

@return	${type}	CI_URI::$uri_string"
      end

      operation 353410 "ruri_string"
	public explicit_return_type "string"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Fetch Re-routed URI string

@return	${type}"
      end
    end

    class 156930 "CI_Utf8"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl "${comment}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utf8 Class

Provides support for UTF-8 environments

@package		CodeIgniter
@subpackage	Libraries
@category	UTF-8
@author		EllisLab Dev Team
@link		https://codeigniter.com/user_guide/libraries/utf8.html"
      operation 353538 "__construct"
	public explicit_return_type "void"
	nparams 0
	
	
	preserve_php_body_indent php_def "  ${comment}${visibility}function ${name}${(}${)}${type}
{
  ${body}}
"
	
	
	comment "Class constructor

Determines if UTF-8 support is to be enabled.

@return	${type}"
      end

      operation 353666 "clean_string"
	public explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Clean UTF-8 strings

Ensures strings contain only valid UTF-8 characters.

@param	${t0}	${p0}	String to clean
@return	${type}"
      end

      operation 353794 "safe_ascii_for_xml"
	public explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Remove ASCII control characters

Removes all ASCII control characters except horizontal tabs,
line feeds, and carriage returns, as all others can cause
problems in XML.

@param	${t0}	${p0}	String to clean
@return	${type}"
      end

      operation 353922 "convert_to_utf8"
	public explicit_return_type "string"
	nparams 2
	  param in name "str" explicit_type "string"
	  param in name "encoding" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}, ${p1}${v1}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Convert to UTF-8

Attempts to convert a string to UTF-8.

@param	${t0}	${p0}		Input string
@param	${t1}	${p1}	Input encoding
@return	${type}	$str encoded in UTF-8 or FALSE on failure"
      end

      operation 354050 "is_ascii"
	public explicit_return_type "bool"
	nparams 1
	  param in name "str" explicit_type "string"
	
	
	preserve_php_body_indent php_def "  ${comment}${final}${visibility}${abstract}${static}function ${name}${(}${p0}${v0}${)}${type}
{
  ${body}}
"
	
	
	comment " --------------------------------------------------------------------

Is ASCII?

Tests if a string is standard 7-bit ASCII or not.

@param	${t0}	${p0}	String to check
@return	${type}"
      end
    end
  end

  package_ref 144130 // compat
end
